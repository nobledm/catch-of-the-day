{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","react","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","_ref","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","proptTypes","PropTypes","object","func","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeID","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"mNAAO,SAASA,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAIP,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAcrC,SAASC,IACd,IAAMC,EAAa,CACjB,WACA,YACA,QACA,OACA,UACA,QACA,YACA,WACA,OACA,cACA,gBACA,QACA,SACA,YACA,UACA,YACA,QACA,aACA,SACA,WACA,cACA,SACA,SACA,WACA,QACA,UACA,OACA,aACA,UACA,YACA,UACA,YACA,QACA,cACA,UACA,WAoCF,SAAAC,OAAUR,EAAMO,GAAhB,KAAAC,OAA+BR,EAAMO,GAArC,KAAAC,OAAoDR,EAjCtC,CACZ,QACA,MACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,WACA,QACA,OACA,QACA,SACA,aACA,WACA,YACA,QACA,SACA,SACA,YACA,WACA,cCzDWS,6MA1BXC,QAAUC,IAAMC,cAEhBC,UAAY,SAAAC,GACRA,EAAEC,iBACF,IAAMC,EAAYC,EAAKP,QAAQQ,QAAQC,MACvCF,EAAKG,MAAMC,QAAQC,KAAnB,UAAAd,OAAkCQ,6EAIlC,OACIO,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBAAiBC,SAAUC,KAAKhB,WAC5CU,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLC,IAAKF,KAAKnB,QACVsB,UAAQ,EAACC,YAAY,aACrBC,aAAc5B,MAElBiB,EAAAC,EAAAC,cAAA,UAAQK,KAAK,UAAb,+BAxBMnB,IAAMwB,mBCmBjBC,EApBA,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,QAAF,OACXf,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OACdJ,EAAAC,EAAAC,cAAA,kBACIF,EAAAC,EAAAC,cAAA,QAAME,UAAU,SACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,MAAhB,MACAJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,QAHR,OAQAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WACVJ,EAAAC,EAAAC,cAAA,YAAOa,8BCTbC,6MAOFC,YAAc,SAACC,GACX,IAAMC,EAAOzB,EAAKG,MAAMuB,OAAOF,GACzBG,EAAQ3B,EAAKG,MAAMyB,MAAMJ,GACzBK,EAAcJ,GAAwB,cAAhBA,EAAKK,OAC3BC,EAAoB,CACtBC,WAAY,QACZR,MACAS,QAAS,CAACC,MAAO,IAAKC,KAAM,MAGhC,OAAKV,EAEDI,EAWAvB,EAAAC,EAAAC,cAAC4B,EAAA,cAAkBL,EACfzB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKA,GACLlB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4B,EAAA,gBAAD,CAAiBC,UAAU,OAAO3B,UAAU,SACxCJ,EAAAC,EAAAC,cAAC4B,EAAA,cAAD,CAAeJ,WAAW,QAAQR,IAAKG,EAAOM,QAAS,CAAEC,MAAO,IAAKC,KAAM,MACvE7B,EAAAC,EAAAC,cAAA,YAAOmB,KAHnB,OAMSF,EAAKa,KACT5D,EAAYiD,EAAQF,EAAKc,OAC1BjC,EAAAC,EAAAC,cAAA,UAAQgC,QAAS,kBAAMxC,EAAKG,MAAMsC,gBAAgBjB,KAAlD,WAnBRlB,EAAAC,EAAAC,cAAC4B,EAAA,cAAkBL,EACfzB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKA,GAAT,SACWC,EAAOA,EAAKa,KAAO,OAD9B,4BALM,8EA8Bb,IAAAI,EAAA9B,KACC+B,EAAWC,OAAOC,KAAKjC,KAAKT,MAAMyB,OAClCkB,EAAQH,EAASI,OAAO,SAACC,EAAWxB,GACtC,IAAMC,EAAOiB,EAAKvC,MAAMuB,OAAOF,GACzBG,EAAQe,EAAKvC,MAAMyB,MAAMJ,GAG/B,OAFoBC,GAAwB,cAAhBA,EAAKK,OAGtBkB,EAAarB,EAAQF,EAAKc,MAE9BS,GACR,GAEH,OACI1C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC4B,EAAA,gBAAD,CAAiBC,UAAU,KAAK3B,UAAU,SACrCiC,EAASM,IAAIrC,KAAKW,cAEvBjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,UACWJ,EAAAC,EAAAC,cAAA,cAAS9B,EAAYoE,aAnE5BpD,IAAMwB,WAApBI,EACK4B,WAAa,CAChBxB,OAAQyB,IAAUC,OAClBxB,MAAOuB,IAAUC,OACjBX,gBAAiBU,IAAUE,MAsEpB/B,yCC/BAgC,6MAxCXC,QAAU7D,IAAMC,cAChB6D,SAAW9D,IAAMC,cACjB8D,UAAY/D,IAAMC,cAClB+D,QAAUhE,IAAMC,cAChBgE,SAAWjE,IAAMC,cAEjBiE,WAAa,SAAC/D,GACVA,EAAEC,iBAEF,IAAM2B,EAAO,CACTa,KAAMtC,EAAKuD,QAAQtD,QAAQC,MAC3BqC,MAAOsB,WAAW7D,EAAKwD,SAASvD,QAAQC,OACxC4B,OAAQ9B,EAAKyD,UAAUxD,QAAQC,MAC/B4D,KAAM9D,EAAK0D,QAAQzD,QAAQC,MAC3B6D,MAAO/D,EAAK2D,SAAS1D,QAAQC,OAGjCF,EAAKG,MAAM6D,QAAQvC,GAEnB5B,EAAEoE,cAAcC,iFAIhB,OACI5D,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYC,SAAUC,KAAKgD,YACvCtD,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,OAAOxB,IAAKF,KAAK2C,QAAS1C,KAAK,OAAOG,YAAY,SAC9DV,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,QAAQxB,IAAKF,KAAK4C,SAAU3C,KAAK,OAAOG,YAAY,UAChEV,EAAAC,EAAAC,cAAA,UAAQ8B,KAAK,SAASxB,IAAKF,KAAK6C,WAC5BnD,EAAAC,EAAAC,cAAA,UAAQN,MAAM,aAAd,UACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,eAAd,cAGJI,EAAAC,EAAAC,cAAA,YAAU8B,KAAK,OAAOxB,IAAKF,KAAK8C,QAAS1C,YAAY,SACrDV,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,QAAQxB,IAAKF,KAAK+C,SAAU9C,KAAK,OAAOG,YAAY,UAChEV,EAAAC,EAAAC,cAAA,UAAQK,KAAK,UAAb,sBAvCUnB,IAAMwB,mBC0CjBiD,6MA7BXC,aAAe,SAACvE,GACZ,IAAMwE,EAAWzB,OAAA0B,EAAA,EAAA1B,CAAA,GACV5C,EAAKG,MAAMsB,KADDmB,OAAA2B,EAAA,EAAA3B,CAAA,GAEZ/C,EAAEoE,cAAc3B,KAAOzC,EAAEoE,cAAc/D,QAG5CF,EAAKG,MAAMqE,WAAWxE,EAAKG,MAAMsE,MAAOJ,4EAGnC,IAAA3B,EAAA9B,KACL,OACIN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOyB,KAAK,OAAOoC,SAAU9D,KAAKwD,aAAclE,MAAOU,KAAKT,MAAMsB,KAAKa,OACnFhC,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOyB,KAAK,QAAQoC,SAAU9D,KAAKwD,aAAclE,MAAOU,KAAKT,MAAMsB,KAAKc,QACpFjC,EAAAC,EAAAC,cAAA,UAAQK,KAAK,OAAOyB,KAAK,SAASoC,SAAU9D,KAAKwD,aAAclE,MAAOU,KAAKT,MAAMsB,KAAKK,QAClFxB,EAAAC,EAAAC,cAAA,UAAQN,MAAM,aAAd,UACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,eAAd,cAEJI,EAAAC,EAAAC,cAAA,YAAU8B,KAAK,OAAOoC,SAAU9D,KAAKwD,aAAclE,MAAOU,KAAKT,MAAMsB,KAAKqC,OAC1ExD,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOyB,KAAK,QAAQoC,SAAU9D,KAAKwD,aAAclE,MAAOU,KAAKT,MAAMsB,KAAKsC,QAEpFzD,EAAAC,EAAAC,cAAA,UAAQgC,QAAS,kBAAME,EAAKvC,MAAMwE,WAAWjC,EAAKvC,MAAMsE,SAAxD,uBAlCW/E,IAAMwB,WCiBlB0D,EAjBD,SAACzE,GAAD,OACNG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,UACIE,UAAU,SACV8B,QAAS,kBAAMrC,EAAM0E,aAAa,YAFtC,0DCJNC,EAAcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,0CACZC,YAAa,mDAOFC,EAJFC,IAAOC,YAAYR,EAAYS,YCkF7BC,6MAlFXC,MAAQ,CACJC,IAAK,KACLC,MAAO,QAkBXC,kDAAc,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAC,EAAAzF,EAAA0F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUhB,EAAKiB,MAAMrG,EAAKG,MAAMmG,QAAS,CAAEC,QAAQ3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAA5C,MADnD,WACJ+F,EADIG,EAAAO,MAGCd,MAHD,CAAAO,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIAhB,EAAKsB,KAAL,GAAAnH,OAAaS,EAAKG,MAAMmG,QAAxB,UAAyC,CAC3CK,KAAMb,EAASc,KAAKlB,MALlB,OASV1F,EAAK6G,SAAS,CACVnB,IAAKI,EAASc,KAAKlB,IACnBC,MAAOI,EAAMJ,OAASG,EAASc,KAAKlB,MAX9B,wBAAAQ,EAAAY,SAAAjB,8DAedhB,aAAe,SAACkC,GACZ,IAAMC,EAAe,IAAIjC,IAASkC,KAAT,GAAA1H,OAAiBwH,EAAjB,kBACzBjC,EAAYmC,OAAOC,gBAAgBF,GAC9BG,KAAKnH,EAAK4F,gBAGnBwB,4BAAS,SAAAC,IAAA,OAAArB,EAAAzF,EAAA0F,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACCrB,IAASkC,OAAOM,UADjB,OAELvH,EAAK6G,SAAS,CAACnB,IAAK,OAFf,wBAAA4B,EAAAR,SAAAO,yFA7BW,IAAA3E,EAAA9B,KAChBmE,IAASkC,OAAOO,mBAAmB,SAAAZ,GAC5BA,GACClE,EAAKkD,YAAY,CAAEgB,4CA+BrB,IAAAa,EAAA7G,KACAwG,EAAS9G,EAAAC,EAAAC,cAAA,UAAQgC,QAAS5B,KAAKwG,QAAtB,UAEf,OAAKxG,KAAK6E,MAAMC,IAIZ9E,KAAK6E,MAAMC,KAAO9E,KAAK6E,MAAME,MAEzBrF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCACC4G,GAMT9G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,uBACC4G,EACAxE,OAAOC,KAAKjC,KAAKT,MAAMuB,QAAQuB,IAAI,SAAAzB,GAAG,OACnClB,EAAAC,EAAAC,cAACkH,EAAD,CACIlG,IAAKA,EACLiD,MAAOjD,EACPC,KAAMgG,EAAKtH,MAAMuB,OAAOF,GACxBgD,WAAYiD,EAAKtH,MAAMqE,WACvBG,WAAY8C,EAAKtH,MAAMwE,eAG/BrE,EAAAC,EAAAC,cAACmH,EAAD,CAAa3D,QAASpD,KAAKT,MAAM6D,UACjC1D,EAAAC,EAAAC,cAAA,UAAQgC,QAAS5B,KAAKT,MAAMyH,kBAA5B,uBA1BGtH,EAAAC,EAAAC,cAACqH,EAAD,CAAOhD,aAAcjE,KAAKiE,sBAnDrBnF,IAAMwB,WC2EfQ,EAlFA,CACboG,MAAO,CACLxF,KAAM,kBACNyB,MAAO,mBACPD,KACE,wFACFvB,MAAO,KACPT,OAAQ,aAGViG,MAAO,CACLzF,KAAM,UACNyB,MAAO,sBACPD,KACE,iFACFvB,MAAO,KACPT,OAAQ,aAGVkG,MAAO,CACL1F,KAAM,eACNyB,MAAO,uBACPD,KACE,qGACFvB,MAAO,KACPT,OAAQ,eAGVmG,MAAO,CACL3F,KAAM,YACNyB,MAAO,mBACPD,KACE,kGACFvB,MAAO,KACPT,OAAQ,aAGVoG,MAAO,CACL5F,KAAM,YACNyB,MAAO,mBACPD,KACE,2EACFvB,MAAO,KACPT,OAAQ,aAGVqG,MAAO,CACL7F,KAAM,kBACNyB,MAAO,qBACPD,KACE,0GACFvB,MAAO,KACPT,OAAQ,aAGVsG,MAAO,CACL9F,KAAM,UACNyB,MAAO,sBACPD,KAAM,oEACNvB,MAAO,KACPT,OAAQ,aAGVuG,MAAO,CACL/F,KAAM,UACNyB,MAAO,sBACPD,KACE,sFACFvB,MAAO,IACPT,OAAQ,aAGVwG,MAAO,CACLhG,KAAM,eACNyB,MAAO,qBACPD,KACE,8FACFvB,MAAO,KACPT,OAAQ,cCzCGyG,6MAtBXC,YAAc,WACVxI,EAAKG,MAAMsI,WAAWzI,EAAKG,MAAMsE,gFAG5B,IAAAiE,EACwC9H,KAAKT,MAAMwI,QAAhD5E,EADH2E,EACG3E,MAAOzB,EADVoG,EACUpG,KAAMC,EADhBmG,EACgBnG,MAAOuB,EADvB4E,EACuB5E,KACtBjC,EAAyB,cAF1B6G,EAC6B5G,OAGlC,OACIxB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,OAAKoI,IAAK7E,EAAO8E,IAAKvG,IACtBhC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACT4B,EACDhC,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAShC,EAAY6D,KAEzCjC,EAAAC,EAAAC,cAAA,SAAIsD,GACJxD,EAAAC,EAAAC,cAAA,UAAQsI,UAAWjH,EAAaW,QAAS5B,KAAK4H,aAAc3G,EAAc,eAAiB,oBA5BxFnC,IAAMwB,WCgHV6H,6MA1GXtD,MAAQ,CACJ/D,OAAQ,GACRE,MAAO,MA8BXoC,QAAU,SAACvC,GACP,IAAMC,EAAMkB,OAAA0B,EAAA,EAAA1B,CAAA,GAAO5C,EAAKyF,MAAM/D,QAE9BA,EAAM,OAAAnC,OAAQyJ,KAAKC,QAAWxH,EAC9BzB,EAAK6G,SAAS,CAAEnF,cAGpB8C,WAAa,SAAChD,EAAK6C,GACf,IAAM3C,EAAMkB,OAAA0B,EAAA,EAAA1B,CAAA,GAAO5C,EAAKyF,MAAM/D,QAE9BA,EAAOF,GAAO6C,EACdrE,EAAK6G,SAAS,CAAEnF,cAGpBiD,WAAa,SAACnD,GACV,IAAME,EAAMkB,OAAA0B,EAAA,EAAA1B,CAAA,GAAO5C,EAAKyF,MAAM/D,QAE9BA,EAAOF,GAAO,KACdxB,EAAK6G,SAAS,CAAEnF,cAGpBkG,iBAAmB,WACf5H,EAAK6G,SAAS,CAACnF,OAAQwH,OAG3BT,WAAa,SAACjH,GACV,IAAMI,EAAKgB,OAAA0B,EAAA,EAAA1B,CAAA,GAAO5C,EAAKyF,MAAM7D,OAE7BA,EAAMJ,GAAOI,EAAMJ,GAAO,GAAK,EAC/BxB,EAAK6G,SAAS,CAAEjF,aAGpBa,gBAAkB,SAACjB,GACf,IAAMI,EAAKgB,OAAA0B,EAAA,EAAA1B,CAAA,GAAO5C,EAAKyF,MAAM7D,cAEtBA,EAAMJ,GACbxB,EAAK6G,SAAS,CAAEjF,8FA3DA,IACRuH,EAAWvI,KAAKT,MAAMiJ,MAAtBD,OACFE,EAAkBC,aAAaC,QAAQJ,EAAO7C,SAEjD+C,GACCzI,KAAKiG,SAAS,CAAEjF,MAAO4H,KAAKC,MAAMJ,KAGtCzI,KAAKE,IAAMsE,EAAKsE,UAAL,GAAAnK,OAAkB4J,EAAO7C,QAAzB,WAA4C,CACnDC,QAAS3F,KACT6E,MAAO,wDAIM,IACT0D,EAAWvI,KAAKT,MAAMiJ,MAAtBD,OACRG,aAAaK,QAAQR,EAAO7C,QAASkD,KAAKI,UAAUhJ,KAAK6E,MAAM7D,uDAI/DwD,EAAKyE,cAAcjJ,KAAKE,sCA0ClB,IAAA4B,EAAA9B,KACN,OACIN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAACsJ,EAAD,CAAQzI,QAAQ,wBAChBf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,UACTkC,OAAOC,KAAKjC,KAAK6E,MAAM/D,QAAQuB,IAAI,SAAAzB,GAAG,OACnClB,EAAAC,EAAAC,cAACuJ,EAAD,CACIvI,IAAKA,EACLiD,MAAOjD,EACPmH,QAASjG,EAAK+C,MAAM/D,OAAOF,GAC3BiH,WAAY/F,EAAK+F,iBAMjCnI,EAAAC,EAAAC,cAACwJ,EAAD,CACItI,OAAQd,KAAK6E,MAAM/D,OACnBE,MAAOhB,KAAK6E,MAAM7D,MAClBa,gBAAiB7B,KAAK6B,kBAE1BnC,EAAAC,EAAAC,cAACyJ,EAAD,CACI3D,QAAS1F,KAAKT,MAAMiJ,MAAMD,OAAO7C,QACjCtC,QAASpD,KAAKoD,QACdQ,WAAY5D,KAAK4D,WACjBG,WAAY/D,KAAK+D,WACjBiD,iBAAkBhH,KAAKgH,iBACvBlG,OAAQd,KAAK6E,MAAM/D,iBApGrBhC,IAAMwB,WCDTgJ,EANE,kBACb5J,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BCYO2J,EAVA,kBACX7J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,KACI9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,KACI/J,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAInI,UAAW7C,IACjCc,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOE,KAAK,kBAAkBnI,UAAW0G,IACzCzI,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOjI,UAAW6H,cCN9BO,iBAAOnK,EAAAC,EAAAC,cAACkK,EAAD,MAAYC,SAASC,cAAc","file":"static/js/main.bb221367.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Fragment } from 'react';\r\nimport { getFunName } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StorePicker extends React.Component {\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    myInput = React.createRef();\r\n\r\n    goToStore = e => {\r\n        e.preventDefault();\r\n        const storeName = this.myInput.current.value;\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                    <h2>Please Enter a Store</h2>\r\n                    <input \r\n                        type=\"text\" \r\n                        ref={this.myInput}\r\n                        required placeholder=\"Store Name\" \r\n                        defaultValue={getFunName()} \r\n                    />\r\n                    <button type=\"submit\">Visit Store &rarr;</button>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({tagline}) => ( \r\n    <header className=\"top\">\r\n        <h1>Catch \r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">of</span> \r\n                <span className=\"the\">the</span>\r\n            </span> \r\n            Day\r\n        </h1>\r\n\r\n        <h3 className=\"tagline\">\r\n            <span>{tagline}</span>\r\n        </h3>\r\n    </header> \r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Order extends React.Component {\r\n    static proptTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    }\r\n\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key,\r\n            timeout: {enter: 500, exit: 500}\r\n        }\r\n\r\n        if (!fish) return null;\r\n\r\n        if(!isAvailable) {\r\n            return (\r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key={key}>\r\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <CSSTransition {...transitionOptions}>\r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component=\"span\" className=\"count\">\r\n                            <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 250, exit: 250 }}>\r\n                                <span>{count}</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        lbs {fish.name}\r\n                        {formatPrice(count * fish.price)}\r\n                        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n                    </span>\r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total: <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    createFish = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        }\r\n\r\n        this.props.addFish(fish);\r\n\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\r\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            description: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        udpateFish: PropTypes.func\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const updatedFish = { \r\n            ...this.props.fish, \r\n            [e.currentTarget.name]: e.currentTarget.value \r\n        };\r\n\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status} >\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n                    Remove Fish\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => ( \r\n        <nav className=\"login\">\r\n            <h2>Login</h2>\r\n            <p>Sign in to manage your store's inventory</p>\r\n            <button \r\n                className=\"github\" \r\n                onClick={() => props.authenticate('Github')}\r\n            >\r\n                Log in with Github\r\n            </button>\r\n        </nav>\r\n)\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAnsPTplTO5zII_CHGHeTncDGH1horP4n4\",\r\n    authDomain: \"catch-of-the-day-dnoble.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-dnoble.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base;","import React from 'react';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport PropTypes from 'prop-types';\r\nimport Login from './Login';\r\nimport firebase from 'firebase';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends React.Component {\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    }\r\n\r\n    static propTypes = {\r\n        fish: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        const store = await base.fetch(this.props.storeID, { context: this });\r\n\r\n        if (!store.owner) {\r\n            await base.post(`${this.props.storeID}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n    }\r\n\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    }\r\n\r\n    logout = async () => {\r\n        await firebase.auth().signOut();\r\n        this.setState({uid: null})\r\n    }\r\n\r\n    render () {\r\n        const logout = <button onClick={this.logout}>Logout</button>\r\n\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate} />\r\n        }\r\n\r\n        if (this.state.uid != this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner</p>\r\n                    {logout}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => (\r\n                    <EditFishForm \r\n                        key={key} \r\n                        index={key}\r\n                        fish={this.props.fishes[key]} \r\n                        updateFish={this.props.updateFish} \r\n                        deleteFish={this.props.deleteFish}\r\n                    />\r\n                ))}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            description: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        const { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add To Order' : 'Sold Out'}</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match\r\n        const localStorageRef = localStorage.getItem(params.storeID);\r\n\r\n        if(localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef) });\r\n        }\r\n\r\n        this.ref = base.syncState(`${params.storeID}/fishes`,  {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        const { params } = this.props.match\r\n        localStorage.setItem(params.storeID, JSON.stringify(this.state.order));\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    };\r\n\r\n    addFish = (fish) => {\r\n        const fishes = {...this.state.fishes};  // Takes a copy of the current state\r\n        \r\n        fishes[`fish${Date.now()}`] = fish;\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        const fishes = {...this.state.fishes};\r\n\r\n        fishes[key] = updatedFish;\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    deleteFish = (key) => {\r\n        const fishes = {...this.state.fishes};\r\n\r\n        fishes[key] = null;\r\n        this.setState({ fishes });\r\n    };\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes: sampleFishes});\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n        const order = {...this.state.order};\r\n\r\n        order[key] = order[key] + 1 || 1;\r\n        this.setState({ order });\r\n    };\r\n\r\n    removeFromOrder = (key) => {\r\n        const order = {...this.state.order};\r\n\r\n        delete order[key];\r\n        this.setState({ order });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Daily\"/>\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => (\r\n                            <Fish \r\n                                key={key} \r\n                                index={key}\r\n                                details={this.state.fishes[key]} \r\n                                addToOrder={this.addToOrder} \r\n                            />\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order} \r\n                    removeFromOrder={this.removeFromOrder}\r\n                />\r\n                <Inventory \r\n                    storeID={this.props.match.params.storeID}\r\n                    addFish={this.addFish} \r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => ( \r\n    <div>\r\n        <h2>Not Found!?!!</h2>\r\n    </div> \r\n    );\r\n \r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => ( \r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeID\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n );\r\n \r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}